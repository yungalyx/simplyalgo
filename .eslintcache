[{"C:\\Users\\alxan\\Desktop\\personal-projects\\simplyalgo\\src\\App.js":"1","C:\\Users\\alxan\\Desktop\\personal-projects\\simplyalgo\\src\\index.js":"2","C:\\Users\\alxan\\Desktop\\personal-projects\\simplyalgo\\src\\pages\\wip.js":"3","C:\\Users\\alxan\\Desktop\\personal-projects\\simplyalgo\\src\\pages\\home.js":"4","C:\\Users\\alxan\\Desktop\\personal-projects\\simplyalgo\\src\\utils\\router.js":"5","C:\\Users\\alxan\\Desktop\\personal-projects\\simplyalgo\\src\\pages\\builder.js":"6","C:\\Users\\alxan\\Desktop\\personal-projects\\simplyalgo\\src\\utils\\api.js":"7","C:\\Users\\alxan\\Desktop\\personal-projects\\simplyalgo\\src\\utils\\charts.js":"8"},{"size":162,"mtime":1620509858987,"results":"9","hashOfConfig":"10"},{"size":478,"mtime":1620509566291,"results":"11","hashOfConfig":"10"},{"size":453,"mtime":1609034308562,"results":"12","hashOfConfig":"10"},{"size":1422,"mtime":1629270370610,"results":"13","hashOfConfig":"10"},{"size":911,"mtime":1629270699169,"results":"14","hashOfConfig":"10"},{"size":954,"mtime":1629275780579,"results":"15","hashOfConfig":"10"},{"size":210,"mtime":1629272408083,"results":"16","hashOfConfig":"10"},{"size":994,"mtime":1629275982669,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1w4cn6x",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},"C:\\Users\\alxan\\Desktop\\personal-projects\\simplyalgo\\src\\App.js",["37"],"C:\\Users\\alxan\\Desktop\\personal-projects\\simplyalgo\\src\\index.js",[],["38","39"],"C:\\Users\\alxan\\Desktop\\personal-projects\\simplyalgo\\src\\pages\\wip.js",[],"C:\\Users\\alxan\\Desktop\\personal-projects\\simplyalgo\\src\\pages\\home.js",[],"C:\\Users\\alxan\\Desktop\\personal-projects\\simplyalgo\\src\\utils\\router.js",[],"C:\\Users\\alxan\\Desktop\\personal-projects\\simplyalgo\\src\\pages\\builder.js",["40","41","42","43","44"],"import React, {useState, useEffect} from \"react\"\r\nimport { request_backtest } from \"../utils/api\"\r\nimport { EquityCurveChart } from \"../utils/charts\"\r\n\r\nconst StrategyBuilder = () => {\r\n    const [name, setName] = useState(\"\")\r\n    const [description, setDescription] = useState(\"\")\r\n    const [chartData, setChartData] = useState([])\r\n\r\n    const handleRun = async() => {\r\n        await request_backtest().then(res => {\r\n            return res.json()\r\n        }).then(data => {\r\n            /*\r\n            let chartData = Object.entries(data.data).map((a, b) => {\r\n                return {cash: a, value: b};\r\n            })\r\n            console.log(chartData)\r\n            */\r\n           console.log(data)\r\n           setChartData(Object.values(data))\r\n        })\r\n    }\r\n   \r\n    return <div> \r\n        <button onClick={handleRun}> Test </button>\r\n        <EquityCurveChart data={chartData} />\r\n    </div>;\r\n    \r\n}\r\n\r\nexport default StrategyBuilder;","C:\\Users\\alxan\\Desktop\\personal-projects\\simplyalgo\\src\\utils\\api.js",[],"C:\\Users\\alxan\\Desktop\\personal-projects\\simplyalgo\\src\\utils\\charts.js",["45","46","47","48","49","50"],"import React, { useState, useEffect, useCallback } from 'react'\r\nimport { LineChart, Line, XAxis, YAxis, ResponsiveContainer, Bar, BarChart, CartesianGrid, Tooltip, AreaChart } from 'recharts'\r\n\r\n\r\n/**\r\n * Generates an equity curve\r\n * @param {Array} data - an array of Objects {date, value, cash} denoting a equity curve\r\n */\r\nexport const EquityCurveChart = ({data}) => {\r\n    return <ResponsiveContainer aspect={60/34}>\r\n        <LineChart\r\n            width={500}\r\n            height={300}\r\n            data={data}\r\n            margin={{\r\n            top: 5,\r\n            right: 30,\r\n            left: 20,\r\n            bottom: 5,\r\n            }}\r\n        >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"date\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Line type=\"monotone\" dataKey=\"cash\" stroke=\"#8884d8\"  />\r\n            <Line type=\"monotone\" dataKey=\"value\" stroke=\"#82ca9d\" />\r\n        </LineChart>\r\n    </ResponsiveContainer>\r\n}",{"ruleId":"51","severity":1,"message":"52","line":1,"column":8,"nodeType":"53","messageId":"54","endLine":1,"endColumn":22},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"51","severity":1,"message":"59","line":1,"column":26,"nodeType":"53","messageId":"54","endLine":1,"endColumn":35},{"ruleId":"51","severity":1,"message":"60","line":6,"column":12,"nodeType":"53","messageId":"54","endLine":6,"endColumn":16},{"ruleId":"51","severity":1,"message":"61","line":6,"column":18,"nodeType":"53","messageId":"54","endLine":6,"endColumn":25},{"ruleId":"51","severity":1,"message":"62","line":7,"column":12,"nodeType":"53","messageId":"54","endLine":7,"endColumn":23},{"ruleId":"51","severity":1,"message":"63","line":7,"column":25,"nodeType":"53","messageId":"54","endLine":7,"endColumn":39},{"ruleId":"51","severity":1,"message":"64","line":1,"column":17,"nodeType":"53","messageId":"54","endLine":1,"endColumn":25},{"ruleId":"51","severity":1,"message":"59","line":1,"column":27,"nodeType":"53","messageId":"54","endLine":1,"endColumn":36},{"ruleId":"51","severity":1,"message":"65","line":1,"column":38,"nodeType":"53","messageId":"54","endLine":1,"endColumn":49},{"ruleId":"51","severity":1,"message":"66","line":2,"column":62,"nodeType":"53","messageId":"54","endLine":2,"endColumn":65},{"ruleId":"51","severity":1,"message":"67","line":2,"column":67,"nodeType":"53","messageId":"54","endLine":2,"endColumn":75},{"ruleId":"51","severity":1,"message":"68","line":2,"column":101,"nodeType":"53","messageId":"54","endLine":2,"endColumn":110},"no-unused-vars","'WorkInProgress' is defined but never used.","Identifier","unusedVar","no-native-reassign",["69"],"no-negated-in-lhs",["70"],"'useEffect' is defined but never used.","'name' is assigned a value but never used.","'setName' is assigned a value but never used.","'description' is assigned a value but never used.","'setDescription' is assigned a value but never used.","'useState' is defined but never used.","'useCallback' is defined but never used.","'Bar' is defined but never used.","'BarChart' is defined but never used.","'AreaChart' is defined but never used.","no-global-assign","no-unsafe-negation"]